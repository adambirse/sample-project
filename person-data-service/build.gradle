ext {
    applicationName = person_data_service_name
    schema = database_name
    datasourceHost = "database"
    datasourcePort = "3306"
    datasourceUsername = "root"
    datasourcePassword = database_password
    datasourceUrl = "jdbc:mysql://${datasourceHost}:${datasourcePort}/${schema}"
    migrations = "db/migration,db/testdata"
    flywayVersion = "4.2.0"
    generatedMapperSourcesDir = "${buildDir}/generated-src/mapstruct/main"
}

jar {
    baseName = applicationName

}

configurations {
    mapstruct
}

sourceSets.main {
    ext.originalJavaSrcDirs = java.srcDirs
    java.srcDir "${generatedMapperSourcesDir}"
}

prepareDockerFile.applicationName = applicationName
buildDocker.applicationName = applicationName

buildscript {

    ext {
        flywayGradleVersion = '3.1'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.flywaydb:flyway-gradle-plugin:$flywayGradleVersion"
    }
}

apply plugin: 'flyway'


project.ext['flyway.url'] = "jdbc:mysql://192.168.99.100:${datasourcePort}/${schema}"
project.ext['flyway.schemas'] = schema
project.ext['flyway.user'] = datasourceUsername
project.ext['flyway.password'] = datasourcePassword
project.ext['flyway.locations'] = migrations

task generateMainMapperClasses(type: JavaCompile) {
    ext.aptDumpDir = file( "build/tmp/apt/mapstruct" )
    destinationDir = aptDumpDir

    classpath = compileJava.classpath + configurations.mapstruct
    source = sourceSets.main.originalJavaSrcDirs
    ext.sourceDestDir = file generatedMapperSourcesDir

    options.define(
            compilerArgs: [
                    "-nowarn",
                    "-proc:only",
                    "-encoding", "UTF-8",
                    "-processor", "org.mapstruct.ap.MappingProcessor",
                    "-s", sourceDestDir.absolutePath,
                    "-source", 1.8,
                    "-target", 1.8,
            ]
    );

    inputs.dir source
    outputs.dir generatedMapperSourcesDir
    doFirst {
        sourceDestDir.mkdirs()
    }
    doLast {
        aptDumpDir.delete()
    }
}


compileJava.dependsOn generateMainMapperClasses


dependencies {
    compile "org.flywaydb:flyway-core:${flywayVersion}"
    compile ("org.springframework.boot:spring-boot-starter-data-jpa") {
        exclude module: 'tomcat-jdbc' //prefer hikari instead.
    }
    compile group: 'com.zaxxer', name: 'HikariCP', version: '2.7.2'
    compile "mysql:mysql-connector-java:6.0.6"
    compile "org.springframework.cloud:spring-cloud-starter-eureka"
    compile "net.logstash.logback:logstash-logback-encoder:4.11"
    testCompile "com.h2database:h2:1.4.196"
    compile "org.mapstruct:mapstruct:1.2.0.Final"
    mapstruct 'org.mapstruct:mapstruct-processor:1.2.0.Final'
}